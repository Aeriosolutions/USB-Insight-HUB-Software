import{w as f}from"./index3.js";import{s as c,e as h,n as m,h as p}from"./utils.js";import{q as g,H as v,r as d,g as w,u as x,d as u,v as n,i as b}from"./scheduler.js";import{g as k}from"./index2.js";import{S as H,i as B}from"./index.js";let q={uptime:[],free_heap:[],total_heap:[],min_free_heap:[],max_alloc_heap:[],fs_used:[],fs_total:[],core_temp:[]};const r=1e3;function A(){const{subscribe:i,update:e}=f(q);return{subscribe:i,addData:t=>{e(a=>({...a,uptime:[...a.uptime,t.uptime].slice(-r),free_heap:[...a.free_heap,t.free_heap/1e3].slice(-r),total_heap:[...a.total_heap,t.total_heap/1e3].slice(-r),min_free_heap:[...a.min_free_heap,t.min_free_heap/1e3].slice(-r),max_alloc_heap:[...a.max_alloc_heap,t.max_alloc_heap/1e3].slice(-r),fs_used:[...a.fs_used,t.fs_used/1e3].slice(-r),fs_total:[...a.fs_total,t.fs_total/1e3].slice(-r),core_temp:[...a.core_temp,t.core_temp].slice(-r)}))}}}const E=A();function C(i){let e,t,a='<g fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"><path d="M9 5H7a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2h-2"/><path d="M9 5a2 2 0 0 1 2-2h2a2 2 0 0 1 2 2v0a2 2 0 0 1-2 2h-2a2 2 0 0 1-2-2zm0 12v-5m3 5v-1m3 1v-3"/></g>',_=[{viewBox:"0 0 24 24"},{width:"1.2em"},{height:"1.2em"},i[0]],o={};for(let s=0;s<_.length;s+=1)o=h(o,_[s]);return{c(){e=g("svg"),t=new v(!0),this.h()},l(s){e=d(s,"svg",{viewBox:!0,width:!0,height:!0});var l=w(e);t=x(l,!0),l.forEach(u),this.h()},h(){t.a=null,n(e,o)},m(s,l){b(s,e,l),t.m(a,e)},p(s,[l]){n(e,o=k(_,[{viewBox:"0 0 24 24"},{width:"1.2em"},{height:"1.2em"},l&1&&s[0]]))},i:m,o:m,d(s){s&&u(e)}}}function D(i,e,t){return i.$$set=a=>{t(0,e=h(h({},e),p(a)))},e=p(e),[e]}class T extends H{constructor(e){super(),B(this,e,D,C,c,{})}}export{T as R,E as a};
